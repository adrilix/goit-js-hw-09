{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,UAAWF,SAASC,cAAc,iBAClCE,OAAQH,SAASC,cAAc,mBAC/BG,IAAKJ,SAASC,cAAc,oBAwB9B,SAASI,EAAcC,EAAUP,GAE/B,OAAO,IAAIQ,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUP,UAEpBU,EAAO,CAAEH,WAAUP,YAEpBA,MA/BPD,EAAKM,IAAIU,iBAAiB,SAE1B,SAAwBC,GACtBA,EAAMC,iBAKN,IAJA,IAAMC,EAAaC,OAAOpB,EAAKC,MAAMoB,OAC/BC,EAAiBF,OAAOpB,EAAKI,UAAUiB,OACvCE,EAAcH,OAAOpB,EAAKK,OAAOgB,OAE9BG,EAAI,EAAGC,EAAQN,EAAYK,GAAKD,EAAaC,GAAK,EAAGC,GAASH,EACrEf,EAAciB,EAAGC,GACdC,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUP,EAAK0B,EAAL1B,MACjB2B,EAAA9B,GAAS+B,OACNC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAAN9B,EAAM,UAE1D+B,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUP,EAAK0B,EAAL1B,MAClB2B,EAAA9B,GAAS+B,OACNI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAAN9B,EAAM,a","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  delayStep: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  btn: document.querySelector('[type=\"submit\"]'),\n}\n\nrefs.btn.addEventListener('click', onClickPromise);\n\nfunction onClickPromise(event) {\n  event.preventDefault();\n  const inputDelay = Number(refs.delay.value);\n  const inputDelayStep = Number(refs.delayStep.value);\n  const inputAmount = Number(refs.amount.value);\n\n  for (let i = 1, delay = inputDelay; i <= inputAmount; i += 1, delay += inputDelayStep) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify\n          .success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify\n          .failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      })\n  }\n};\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  })\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","delay","document","querySelector","delayStep","amount","btn","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","inputDelay","Number","value","inputDelayStep","inputAmount","i","delay1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.ca13f1a5.js.map"}